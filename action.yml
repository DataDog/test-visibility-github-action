name: 'Configure Datadog Test Visibility'
description: 'Installs Datadog tracers for configured languages and enables Test Visibility'
branding:
  icon: 'bar-chart'
  color: 'purple'
inputs:
  languages:
    description: 'List of languages to be instrumented. Can be either "all" or any of "java", "js", "python", "dotnet" (multiple languages can be specified as a space-separated list).'
    required: true
  service-name:
    description: 'The name of the service or library being tested.'
    required: true
  api-key:
    description: 'Datadog API key. Can be found at https://app.datadoghq.com/organization-settings/api-keys'
    required: true
  site:
    description: 'Datadog site (optional). See https://docs.datadoghq.com/getting_started/site for more information about sites.'
    required: false
runs:
  using: "composite"
  steps:
    - name: Set GitHub Path
      run: echo "$GITHUB_ACTION_PATH" >> $GITHUB_PATH
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Download and run configuration script
      id: run-configuration-script
      run: |
        # See https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action#accessing-files-created-by-a-container-action
        # When running a Docker container action, the Github workspace is available at a hard-coded path of /github/workspace
        # When running a "regular", the workspace path varies.
        # The symlink trick below is needed to make the same path /github/workspace/.datadog available for all types of actions
        mkdir -p $GITHUB_WORKSPACE/.datadog
        mkdir -p /github/workspace
        ln -s $GITHUB_WORKSPACE/.datadog /github/workspace/.datadog

        url="https://install.datadoghq.com/scripts/install_test_visibility_v1.sh"
        filepath="install_test_visibility.sh"
      
        if command -v curl >/dev/null 2>&1; then
          curl -Lo "$filepath" "$url"
        elif command -v wget >/dev/null 2>&1; then
          wget -O "$filepath" "$url"
        else
          >&2 echo "Error: Neither wget nor curl is installed."
          return 1
        fi

        chmod +x ./install_test_visibility.sh
        ./install_test_visibility.sh >> "$GITHUB_ENV"
      shell: bash
      env:
        DD_CIVISIBILITY_INSTRUMENTATION_LANGUAGES: ${{ inputs.languages }}
        DD_TRACER_FOLDER: /github/workspace/.datadog
        DD_API_KEY: ${{ inputs.api-key }}
        DD_SITE: ${{ inputs.site }}

    - name: Propagate optional site input to environment variable
      if: "${{ inputs.site != '' }}"
      run: |
        echo "DD_SITE=${{ inputs.site }}" >> "$GITHUB_ENV"
      shell: bash

    - name: Propagate service name and API key from inputs to environment variables
      run: |
        echo "DD_SERVICE=${{ inputs.service-name }}" >> "$GITHUB_ENV"
        echo "DD_API_KEY=${{ inputs.api-key }}" >> "$GITHUB_ENV"
        echo "DD_CIVISIBILITY_AUTO_INSTRUMENTATION_PROVIDER=github" >> "$GITHUB_ENV"
      shell: bash

    - name: Print summary
      run: |
        echo "---" >> $GITHUB_STEP_SUMMARY
        echo '<a target="_blank" title="Datadog Test Visibility" href="https://docs.datadoghq.com/tests/"><picture><source media="(prefers-color-scheme: dark)" srcset="https://raw.githubusercontent.com/nikita-tkachenko-datadog/gha-composite-test/main/logos/dd_logo_h_white.svg"><img width="200" alt="Datadog Test Visibility" src="https://raw.githubusercontent.com/nikita-tkachenko-datadog/gha-composite-test/main/logos/dd_logo_h_rgb.svg"></picture></a>' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "Installed Test Visibility libraries:" >> $GITHUB_STEP_SUMMARY
        
        if [ ! -z "$DD_TRACER_VERSION_DOTNET" ]; then
          echo "- __.NET:__ $DD_TRACER_VERSION_DOTNET" >> $GITHUB_STEP_SUMMARY
        fi
        if [ ! -z "$DD_TRACER_VERSION_JAVA" ]; then
          echo "- __Java:__ $DD_TRACER_VERSION_JAVA" >> $GITHUB_STEP_SUMMARY
        fi
        if [ ! -z "$DD_TRACER_VERSION_JS" ]; then
          echo "- __JS:__ $DD_TRACER_VERSION_JS" >> $GITHUB_STEP_SUMMARY
        fi
        if [ ! -z "$DD_TRACER_VERSION_PYTHON" ]; then
          echo "- __Python:__ $DD_TRACER_VERSION_PYTHON" >> $GITHUB_STEP_SUMMARY
        fi
        echo "---" >> $GITHUB_STEP_SUMMARY
      shell: bash
